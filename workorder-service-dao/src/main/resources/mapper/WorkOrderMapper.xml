<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.workorder.service.dao.WorkOrderMapper">
    <resultMap id="BaseResultMap" type="com.workorder.service.support.model.po.WorkOrder">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="submit_user_id" jdbcType="INTEGER" property="submitUserId"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="template_id" jdbcType="INTEGER" property="templateId"/>
        <result column="created_datetime" jdbcType="TIMESTAMP" property="createdDatetime"/>
        <result column="is_delete" jdbcType="BIT" property="isDelete"/>
        <result column="affix_list" jdbcType="VARCHAR" property="affixList"/>
        <result column="submit_user" jdbcType="VARCHAR" property="submitUser"/>
        <result column="expect_datetime" jdbcType="TIMESTAMP" property="expectDatetime"/>
        <result column="environment" jdbcType="VARCHAR" property="environment"/>
        <result column="cancel_user_id" jdbcType="INTEGER" property="cancelUserId"/>
        <result column="cancel_datetime" jdbcType="INTEGER" property="cancelDatetime"/>
        <result column="project_code" jdbcType="VARCHAR" property="projectCode"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.workorder.service.support.model.po.WorkOrder">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>

    <resultMap id="BaseWorkOrderPageListMap" type="com.workorder.service.support.model.po.WorkOrder">
        <id column="work_order_id1" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="submit_user_id" jdbcType="INTEGER" property="submitUserId"/>
        <result column="template_id" jdbcType="INTEGER" property="templateId"/>
        <result column="submit_datetime" jdbcType="TIMESTAMP" property="createdDatetime"/>
        <result column="is_delete" jdbcType="BIT" property="isDelete"/>
        <result column="affix_list" jdbcType="VARCHAR" property="affixList"/>
        <result column="submit_user" jdbcType="VARCHAR" property="submitUser"/>
        <result column="name" jdbcType="VARCHAR" property="templateName"/>
        <result column="project_code" jdbcType="VARCHAR" property="projectCode"/>
        <result column="status1" jdbcType="INTEGER" property="status"/>
        <result column="expect_datetime" jdbcType="TIMESTAMP" property="expectDatetime"/>
        <result column="environment" jdbcType="VARCHAR" property="environment"/>
        <result column="cancel_user_id" jdbcType="INTEGER" property="cancelUserId"/>
        <result column="cancel_datetime" jdbcType="INTEGER" property="cancelDatetime"/>


        <collection property="flowList" javaType="java.util.List"
                    ofType="com.workorder.service.support.model.po.WorkOrderHandlerFlow">
            <id column="flow_id" jdbcType="INTEGER" property="id"/>
            <result column="work_order_id" jdbcType="INTEGER" property="workOrderId"/>
            <result column="handler_user_id" jdbcType="INTEGER" property="handlerUserId"/>
            <result column="status" jdbcType="INTEGER" property="status"/>
            <result column="action_type" jdbcType="INTEGER" property="actionType"/>
            <result column="handler_datetime" jdbcType="TIMESTAMP" property="createdDatetime"/>
            <result column="last_modified_datetime" jdbcType="TIMESTAMP" property="lastModifiedDatetime"/>
            <result column="is_delete" jdbcType="BIT" property="isDelete"/>
            <result column="memo" jdbcType="VARCHAR" property="memo"/>
            <result column="handler_batch_id" jdbcType="VARCHAR" property="handlerBatchId"/>
            <result column="handler_user" jdbcType="VARCHAR" property="handlerUser"/>
        </collection>
    </resultMap>

    <resultMap id="BaseWorkOrderPageListMap2" type="com.workorder.service.support.model.po.WorkOrderPagePo">
        <id column="work_order_id1" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="submit_user_id" jdbcType="INTEGER" property="submitUserId"/>
        <result column="template_id" jdbcType="INTEGER" property="templateId"/>
        <result column="submit_datetime" jdbcType="TIMESTAMP" property="createdDatetime"/>
        <result column="is_delete" jdbcType="BIT" property="isDelete"/>
        <result column="affix_list" jdbcType="VARCHAR" property="affixList"/>
        <result column="submit_user" jdbcType="VARCHAR" property="submitUser"/>
        <result column="name" jdbcType="VARCHAR" property="templateName"/>
        <result column="project_code" jdbcType="VARCHAR" property="projectCode"/>
        <result column="status1" jdbcType="INTEGER" property="status"/>
        <result column="expect_datetime" jdbcType="TIMESTAMP" property="expectDatetime"/>
        <result column="environment" jdbcType="VARCHAR" property="environment"/>
        <result column="cancel_user_id" jdbcType="INTEGER" property="cancelUserId"/>
        <result column="cancel_datetime" jdbcType="INTEGER" property="cancelDatetime"/>
        <result column="handler_datetime" jdbcType="TIMESTAMP" property="handlerDateTime"/>
        <result column="handler_user" jdbcType="VARCHAR" property="handlerUserName"/>
        <result column="flow_id" jdbcType="INTEGER" property="lastNeedHandlerFlowId"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, title, submit_user_id,submit_user, status, template_id, created_datetime, is_delete, affix_list,
        expect_datetime,environment
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        content
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from work_order
        where id = #{id,jdbcType=INTEGER} and is_delete=0
        <if test="submitUserId!=null">
            and submit_user_id=#{submitUserId,jdbcType=INTEGER}
        </if>
    </select>
    <insert id="insert" parameterType="com.workorder.service.support.model.po.WorkOrder"
            keyColumn="id" useGeneratedKeys="true" keyProperty="id">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <!--    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">-->
        <!--      SELECT LAST_INSERT_ID()-->
        <!--    </selectKey>-->
        insert into work_order (title, submit_user_id,submit_user, status,
        template_id, created_datetime, is_delete,
        affix_list, content,expect_datetime,environment)
        values (#{title,jdbcType=VARCHAR}, #{submitUserId,jdbcType=INTEGER},#{submitUser,jdbcType=VARCHAR},
        #{status,jdbcType=INTEGER},
        #{templateId,jdbcType=INTEGER}, now(), 0,
        #{affixList,jdbcType=VARCHAR},
        #{content,jdbcType=LONGVARCHAR},
        #{expectDatetime,jdbcType=TIMESTAMP},
        #{environment,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.workorder.service.support.model.po.WorkOrder">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into work_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
                title,
            </if>
            <if test="submitUserId != null">
                submit_user_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="templateId != null">
                template_id,
            </if>
            <if test="createdDatetime != null">
                created_datetime,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="affixList != null">
                affix_list,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="submitUserId != null">
                #{submitUserId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="templateId != null">
                #{templateId,jdbcType=INTEGER},
            </if>
            <if test="createdDatetime != null">
                #{createdDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=BIT},
            </if>
            <if test="affixList != null">
                #{affixList,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.workorder.service.support.model.po.WorkOrder">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update work_order
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="submitUserId != null">
                submit_user_id = #{submitUserId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="templateId != null">
                template_id = #{templateId,jdbcType=INTEGER},
            </if>
            <if test="createdDatetime != null">
                created_datetime = #{createdDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=BIT},
            </if>
            <if test="affixList != null">
                affix_list = #{affixList,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithWorkOrder" parameterType="com.workorder.service.support.model.po.WorkOrder">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update work_order
        set title = #{title,jdbcType=VARCHAR},
        submit_user_id = #{submitUserId,jdbcType=INTEGER},
        status = #{status,jdbcType=INTEGER},
        template_id = #{templateId,jdbcType=INTEGER},
        created_datetime = #{createdDatetime,jdbcType=TIMESTAMP},
        is_delete = #{isDelete,jdbcType=BIT},
        affix_list = #{affixList,jdbcType=VARCHAR},
        content = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateWorkOrderContentById" parameterType="com.workorder.service.support.model.po.WorkOrder">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update work_order
        set title = #{title,jdbcType=VARCHAR},
        content = #{content,jdbcType=VARCHAR},
        affix_list = #{affixList,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER} and submit_user_id = #{submitUserId,jdbcType=INTEGER}
    </update>

    <select id="countWorkOrderByOther"
            parameterType="com.workorder.service.support.model.po.QueryCurrentUserWorkOrderPo"
            resultType="java.lang.Integer">
        select count(*) from work_order_handler_flow
        where 1=1
        <if test="queryPo.type==2 or queryPo.type==1">
            and id in (select distinct work_order_id from work_order_handler_flow where handler_user_id =#{queryPo.userId,jdbcType=INTEGER})
        </if>
        <if test="queryPo.status!=0">
            and status=#{queryPo.status}
        </if>
        <if test="queryPo.beginDate!=null and queryPo.endDate!=null">
            and created_datetime BETWEEN #{queryPo.beginDate} and #{queryPo.endDate}
        </if>
        <if test="queryPo.templateId !=null and queryPo.templateId !=0">
            and wo.template_id = #{queryPo.templateId}
        </if>
        <if test="queryPo.workOrderName!=null">
            and wo.title like concat(#{queryPo.workOrderName},'%')
        </if>
    </select>

    <select id="countWorkOrderByDevelop"
            parameterType="com.workorder.service.support.model.po.QueryCurrentUserWorkOrderPo"
            resultType="java.lang.Integer">
        SELECT COUNT(wo.id)
        from work_order wo

        <where>
            <choose>
                <when test="queryPo.type==0">
                    wo.submit_user_id=#{queryPo.userId,jdbcType=INTEGER}
                </when>
                <otherwise>
                    1=1
                </otherwise>
            </choose>
            <if test="queryPo.status!=0">
                and wo.status=#{queryPo.status}
            </if>
            <if test="queryPo.beginDate!=null and queryPo.endDate!=null">
                and wo.created_datetime BETWEEN #{queryPo.beginDate} and #{queryPo.endDate}
            </if>
            <if test="queryPo.templateId !=null and queryPo.templateId !=0">
                and wo.template_id = #{queryPo.templateId}
            </if>
            <if test="queryPo.workOrderName!=null">
                and wo.title like concat(#{queryPo.workOrderName},'%')
            </if>
        </where>
    </select>
    <!--old query-->
    <!--
    <select id="queryPageList" resultMap="BaseWorkOrderPageListMap">
        select
        wo.id as work_order_id1, wo.title, wo.submit_user_id,wo.status as status1,wo.submit_user, wo.template_id,
        wo.created_datetime as
        submit_datetime, wo.affix_list,wo.content,
        wo.expect_datetime,wo.environment,
        fl.id as flow_id, fl.work_order_id, fl.template_id,t.name,t.project_code, fl.handler_user_id,fl.handler_user,
        fl.status,fl.action_type, fl.created_datetime as handler_datetime,fl.last_modified_datetime, fl.memo,
        fl.handler_batch_id
        from work_order wo
        inner join work_order_handler_flow fl
        on wo.id = fl.work_order_id
        inner join template t
        on fl.template_id=t.id
        <where>
            <choose>
                <when test="queryPo.type==0">
                    wo.submit_user_id =#{queryPo.userId,jdbcType=INTEGER}
                </when>
                <when test="queryPo.type==2 or queryPo.type==1">
                    fl.handler_user_id=#{queryPo.userId,jdbcType=INTEGER}
                </when>
                <otherwise>
                    1=1
                </otherwise>
            </choose>
            <if test="queryPo.status!=0">
                and wo.status=#{queryPo.status}
            </if>
            <if test="queryPo.beginDate!=null and queryPo.endDate!=null">
                and wo.created_datetime BETWEEN #{queryPo.beginDate} and #{queryPo.endDate}
            </if>
        </where>
        order by wo.created_datetime desc
        limit #{index},#{pageSize}
    </select>
    -->

    <select id="queryPageListByOther" resultMap="BaseWorkOrderPageListMap2">
        select
        wo.id as work_order_id1, wo.title, wo.submit_user_id,wo.status as status1,wo.submit_user, wo.template_id,
        wo.created_datetime as submit_datetime, wo.affix_list,
        wo.expect_datetime,wo.environment,t.name,t.project_code,
        (select created_datetime from work_order_handler_flow where work_order_id=wo.id order by created_datetime desc limit 1) as handler_datetime,
        (select handler_user from work_order_handler_flow where work_order_id=wo.id order by created_datetime desc limit 1) as handler_user,
        (select id from work_order_handler_flow where work_order_id=wo.id order by created_datetime desc limit 1) as flow_id
        from work_order wo
        inner join template t
        on wo.template_id=t.id
        <where>
            <choose>
                <when test="queryPo.type==2 or queryPo.type==1">
                    wo.id in (select distinct work_order_id from work_order_handler_flow where handler_user_id =#{queryPo.userId,jdbcType=INTEGER})
                </when>
                <otherwise>
                    1=1
                </otherwise>
            </choose>
            <if test="queryPo.status!=0">
                and wo.status=#{queryPo.status}
            </if>
            <if test="queryPo.beginDate!=null and queryPo.endDate!=null">
                and wo.created_datetime BETWEEN #{queryPo.beginDate} and #{queryPo.endDate}
            </if>
            <if test="queryPo.templateId !=null and queryPo.templateId !=0">
                and wo.template_id = #{queryPo.templateId}
            </if>
            <if test="queryPo.workOrderName!=null">
                and wo.title like concat(#{queryPo.workOrderName},'%')
            </if>
        </where>
        order by wo.created_datetime desc
        limit #{index},#{pageSize}
    </select>

    <select id="queryPageListByDevelop" resultMap="BaseWorkOrderPageListMap2">
        select
        wo.id as work_order_id1, wo.title, wo.submit_user_id,wo.status as status1,wo.submit_user, wo.template_id,
        wo.created_datetime as submit_datetime, wo.affix_list,
        wo.expect_datetime,wo.environment,t.name,t.project_code,
        (select created_datetime from work_order_handler_flow where work_order_id=wo.id order by created_datetime desc limit 1) as handler_datetime,
        (select handler_user from work_order_handler_flow where work_order_id=wo.id order by created_datetime desc limit 1) as handler_user
        from work_order wo
        inner join template t
        on wo.template_id=t.id
        <where>
            <choose>
                <when test="queryPo.type==0">
                    wo.submit_user_id =#{queryPo.userId,jdbcType=INTEGER}
                </when>
                <otherwise>
                    1=1
                </otherwise>
            </choose>
            <if test="queryPo.status!=0">
                and wo.status=#{queryPo.status}
            </if>
            <if test="queryPo.beginDate!=null and queryPo.endDate!=null">
                and wo.created_datetime BETWEEN #{queryPo.beginDate} and #{queryPo.endDate}
            </if>
            <if test="queryPo.templateId !=null and queryPo.templateId !=0">
                and wo.template_id = #{queryPo.templateId}
            </if>
            <if test="queryPo.workOrderName!=null">
                and wo.title like concat(#{queryPo.workOrderName},'%')
            </if>
        </where>
        order by wo.created_datetime desc
        limit #{index},#{pageSize}
    </select>

    <update id="cancelWorkOrder" parameterType="com.workorder.service.support.model.po.WorkOrder">
        update work_order
        set reason= #{reason,jdbcType=VARCHAR}
          , cancel_datetime = now()
          , status = #{status,jdbcType=INTEGER}
          , cancel_user_id=#{cancelUserId,jdbcType=INTEGER}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateWorkOrderStatus" parameterType="com.workorder.service.support.model.po.WorkOrder">
        update work_order
        set status                = #{status,jdbcType=INTEGER},
            last_modified_datetime=now(),
            last_handler_datetime=now(),
            last_handler_user=#{lastHandlerUser,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
</mapper>